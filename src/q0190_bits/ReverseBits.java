package q0190_bits;

public class ReverseBits {
	/**
	颠倒给定的 32 位无符号整数的二进制位。

	示例 1：
	
	输入: 00000010100101000001111010011100
	输出: 00111001011110000010100101000000
	解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
	      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
	示例 2：
	
	输入：11111111111111111111111111111101
	输出：10111111111111111111111111111111
	解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
	      因此返回 3221225471 其二进制表示形式为 10101111110010110010011101101001。
	
	res <<= 1 res乘以2的一次方
	res >>= 1 res除以2的一次方
	 */
	public static int reverseBits(int n) {
        if(n == 0) return 0;
        int res = 0;
        for(int i=0; i<32; i++){
        	res <<= 1;
        	if((n&1)==1) res++;
        	n >>= 1;
        }
        return res;
    }
	public static void main(String[] args) {
		int res = reverseBits(43261596);
		System.out.println(res);
	}
}
